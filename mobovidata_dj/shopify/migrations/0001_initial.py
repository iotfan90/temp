# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2017-10-20 23:38
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.CharField(db_index=True, max_length=32, unique=True)),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('body_html', models.TextField(blank=True, null=True)),
                ('vendor', models.CharField(blank=True, max_length=100, null=True)),
                ('product_type', models.CharField(blank=True, max_length=200, null=True)),
                ('handle', models.CharField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('template_suffix', models.CharField(blank=True, max_length=100, null=True)),
                ('published_scope', models.CharField(blank=True, choices=[('G', 'global'), ('W', 'web')], max_length=2, null=True)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'db_table': 'shopify_product',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_id', models.CharField(blank=True, db_index=True, max_length=32, null=True, unique=True)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('width', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('src', models.URLField(blank=True, max_length=400, null=True)),
                ('variant_ids', models.TextField(blank=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shopify.Product')),
            ],
            options={
                'db_table': 'shopify_product_image',
            },
        ),
        migrations.CreateModel(
            name='ProductOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_id', models.CharField(blank=True, db_index=True, max_length=32, null=True, unique=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shopify.Product')),
                ('values', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'db_table': 'shopify_product_option',
            },
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variant_id', models.CharField(blank=True, db_index=True, max_length=32, null=True, unique=True)),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('sku', models.CharField(blank=True, db_index=True, max_length=255, null=True, unique=True)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('grams', models.IntegerField(blank=True, null=True)),
                ('inventory_policy', models.CharField(blank=True, max_length=50, null=True)),
                ('compare_at_price', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('fulfillment_service', models.CharField(blank=True, max_length=50, null=True)),
                ('inventory_management', models.CharField(blank=True, max_length=50, null=True)),
                ('option1', models.CharField(blank=True, max_length=100, null=True)),
                ('option2', models.CharField(blank=True, max_length=100, null=True)),
                ('option3', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('taxable', models.BooleanField(default=False)),
                ('barcode', models.CharField(blank=True, max_length=100, null=True)),
                ('inventory_quantity', models.IntegerField(blank=True, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=4, max_digits=9, null=True)),
                ('weight_unit', models.CharField(blank=True, choices=[('g', 'g'), ('kg', 'kg'), ('oz', 'oz'), ('lb', 'lb')], max_length=2, null=True)),
                ('old_inventory_quantity', models.IntegerField(blank=True, null=True)),
                ('requires_shipping', models.BooleanField(default=False)),
                ('available', models.BooleanField(default=True)),
                ('featured_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shopify.ProductImage')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shopify.Product')),
            ],
            options={
                'db_table': 'shopify_product_variant',
            },
        ),
    ]
