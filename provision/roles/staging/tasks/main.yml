---
  - name: install CA certificates
    apt: name=ca-certificates
  - name: add 3rd party apt repository keys
    apt_key: url='{{ item }}'
    with_items:
      - http://nginx.org/packages/keys/nginx_signing.key
#      - https://www.postgresql.org/media/keys/ACCC4CF8.asc
      - http://www.rabbitmq.com/rabbitmq-signing-key-public.asc
  - name: add 3rd party repositories
    apt_repository: repo='{{ item }}'
    with_items:
      - deb http://nginx.org/packages/ubuntu/ trusty nginx
#      - deb http://apt.postgresql.org/pub/repos/apt/ wheezy-pgdg main
#      - deb http://www.rabbitmq.csom/debian/ testing main
  - name: update package list and upgrade
    apt: update_cache=yes upgrade=dist
  - name: install packages
    apt: name={{ item }} state=latest
    with_items:
      - nginx
      - sudo
      - ntp
      - ntpdate
      - mysql-server
      - python-mysqldb
      # Why do we need this?
      # - python-virtualenv
      - python-pip
      - libffi-dev
      - supervisor
      - gcc
      - git
      - python-dev
      - libmysqlclient-dev
#      - rabbitmq-server
# Will probably be needed later
      - redis-server
  - name: create db
    mysql_db: login_password='ripcurl123' name=mobovidata_www encoding='UTF8'
    sudo: yes
  - name: create db users
    mysql_user: login_password='ripcurl123' name={{ item.name }} password={{ item.password }} priv=mobovidata_www.*:ALL
    sudo: yes
    with_items:
      - { name: 'django', password: 'ripcurl' }
  - name: create directories
    file: path={{ item.path }} owner={{ item.owner }} group={{ item.group }} mode={{ item.mode }} state=directory
    with_items:
      - { path: '/var/www/mobovidata/', owner: 'www-data', group: 'www-data', mode: '775' }
      - { path: '/var/www/mobovidata/media/', owner: 'www-data', group: 'www-data', mode: '775' }
      - { path: '/var/log/mobovidata/', owner: 'www-data', group: 'www-data', mode: '775' }
      - { path: '/usr/local/lib/mobovidata/', owner: 'root', group: 'root', mode: '775' }
      - { path: '/var/lib/mobovidata/celery', owner: 'www-data', group: 'www-data', mode: '755' }
      - { path: '/var/run/mobovidata/celery', owner: 'www-data', group: 'www-data', mode: '755' }
  - name: upload config
    synchronize: dest={{ item.dest }} src={{ item.src }} owner=no group=no recursive=yes delete=yes
    with_items:
      - { dest: '/etc/nginx/', src: 'nginx/' }
    # We post the supervisor conf with deployment
    #  - { dest: '/etc/supervisor/conf.d/', src: 'supervisor/' }
    notify:
    - restart nginx
    # - restart supervisor
  - name: upload key
    synchronize: dest={{ item.dest }} src={{ item.src }} owner=yes group=no recursive=yes delete=yes
    with_items:
      - { dest: '/root/.ssh/', src: 'bitbucket' }
      - { dest: '/root/.ssh/', src: 'bitbucket.pub' }

  - name: upload config file
    synchronize: dest={{ item.dest }} src={{ item.src }} owner=no group=no recursive=yes delete=yes
    with_items:
      - { dest: '/root/.ssh/', src: 'config' }

  - name: clone repo
    git: repo='git@bitbucket.org:wirelessemporium/mobovidata.git' dest='/usr/local/lib/mobovidata/' clone=yes accept_hostkey=yes key_file=/root/.ssh/bitbucket force=yes

# Need to create an SSH key that we add into the 'provision/roles/common/files'. Then copy that ssh to the root user's
# directory using the upload config task above. Then add the keyfile to the bitbucket repo, and the
# keyfile parameter in the git command above. In bitbucket, just give this key read access only.
